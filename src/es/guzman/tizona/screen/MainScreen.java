package es.guzman.tizona.screen;

import org.vaadin.dialogs.ConfirmDialog;
import org.vaadin.jouni.animator.AnimatorProxy;
import org.vaadin.jouni.animator.client.ui.VAnimatorProxy.AnimType;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.Sizeable;
import com.vaadin.terminal.gwt.client.ui.AlignmentInfo.Bits;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupView;
import com.vaadin.ui.PopupView.PopupVisibilityEvent;
import com.vaadin.ui.PopupView.PopupVisibilityListener;
import com.vaadin.ui.VerticalSplitPanel;

import es.guzman.tizona.common.StringsContainer;
import es.guzman.tizona.screen.main.Filter;
import es.guzman.tizona.screen.main.TabsContainer;

public class MainScreen extends CustomComponent {

    @AutoGenerated
    private AbsoluteLayout mainLayout;

    @AutoGenerated
    private VerticalSplitPanel verticalSplitPanelPrincipal;

    // Common objects
    private AnimatorProxy proxy = new AnimatorProxy();

    // Filtro principal
    private Filter filter;

    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization.
     * 
     * The constructor will not be automatically regenerated by the visual
     * editor.
     */
    public MainScreen() {
	buildMainLayout();
	setCompositionRoot(mainLayout);

	// Initialize the "effects proxy"
	mainLayout.addComponent(proxy);

	// Configuración del panel principal
	verticalSplitPanelPrincipal.setLocked(true);
	verticalSplitPanelPrincipal.setSplitPosition(50, Sizeable.UNITS_PIXELS);

	// Creamos la cabecera
	Component cabecera = hazCabecera();
	verticalSplitPanelPrincipal.setFirstComponent(cabecera);
	proxy.animate(cabecera, AnimType.FADE_IN).setDuration(500).setDelay(0);

	// Creamos el contenido
	TabsContainer tabs = new TabsContainer();
	verticalSplitPanelPrincipal.setSecondComponent(tabs);

    }

    private Component hazCabecera() {

	GridLayout grid = new GridLayout(3, 1);
	grid.setStyleName("principal-cabecera-grid");
	grid.setSpacing(true);
	grid.setMargin(true);
	grid.setWidth("100%");
	grid.setHeight("100%");

	Button botonSalir = new Button(StringsContainer.getString("tizona.principal.logout"));
	botonSalir.addStyleName("principal-cabecera-salir");
	botonSalir.addListener(new ClickListener() {
	    @Override
	    public void buttonClick(ClickEvent event) {
		doLogout();
	    }
	});
	grid.addComponent(botonSalir, 0, 0);
	grid.setComponentAlignment(botonSalir, new Alignment(Bits.ALIGNMENT_VERTICAL_CENTER | Bits.ALIGNMENT_LEFT));

	// Etiqueta principal
	filter = new Filter();
	PopupView popup = new PopupView(filter);
	popup.setDescription("Click to edit");
	popup.setHideOnMouseOut(false);
	popup.setStyleName("principal-cabecera-informacion ");
	popup.addListener(new PopupVisibilityListener() {
	    @Override
	    public void popupVisibilityChange(PopupVisibilityEvent event) {
		// Cerramos el popup, actualizar
		if (!event.isPopupVisible()) {
		    doActualiza();
		}
	    }
	});
	grid.addComponent(popup, 1, 0);
	grid.setComponentAlignment(popup, new Alignment(Bits.ALIGNMENT_VERTICAL_CENTER
		| Bits.ALIGNMENT_HORIZONTAL_CENTER));

	return grid;

    }

    private void doLogout() {
	 getApplication().close();
//	ConfirmDialog dialog = ConfirmDialog.show(getApplication().getMainWindow(), "¿Salir?",
//		"¿Está seguro que desea salir?", "Sí", "No", new ConfirmDialog.Listener() {
//
//		    @Override
//		    public void onClose(ConfirmDialog dialog) {
//			if (dialog.isConfirmed()) {
//			    getApplication().close();
//			}
//		    }
//		});
    }

    /**
     * Método llamado al actualizar
     */
    private void doActualiza() {
	getWindow().showNotification(StringsContainer.getString("tizona.principal.filtro.actualizando"));
    }

    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
	// common part: create layout
	mainLayout = new AbsoluteLayout();
	mainLayout.setImmediate(false);
	mainLayout.setWidth("100%");
	mainLayout.setHeight("100%");
	mainLayout.setMargin(false);

	// top-level component properties
	setWidth("100.0%");
	setHeight("100.0%");

	// verticalSplitPanelPrincipal
	verticalSplitPanelPrincipal = new VerticalSplitPanel();
	verticalSplitPanelPrincipal.setImmediate(false);
	verticalSplitPanelPrincipal.setWidth("100.0%");
	verticalSplitPanelPrincipal.setHeight("100.0%");
	verticalSplitPanelPrincipal.setMargin(false);
	mainLayout.addComponent(verticalSplitPanelPrincipal, "top:0.0px;left:0.0px;");

	return mainLayout;
    }

}
